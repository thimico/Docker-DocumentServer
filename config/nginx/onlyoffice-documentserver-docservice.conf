#This section is intended to exclude the double redirect when using HTTPS
if ($http_x_forwarded_proto){
  #support old version
  rewrite ^\/OfficeWeb(\/apps\/.*)$ $the_scheme://$the_host/2017-02-17-15-53/web-apps$1 redirect;

  #script caching protection
  rewrite ^(\/web-apps\/(?!api\/).*)$ $the_scheme://$the_host/2017-02-17-15-53$1 redirect;
}

#welcome page
rewrite ^/$ /welcome/ redirect;

#support old version
rewrite ^\/OfficeWeb(\/apps\/.*)$ /2017-02-17-15-53/web-apps$1 redirect;

#script caching protection
rewrite ^(\/web-apps\/apps\/(?!api\/).*)$ /2017-02-17-15-53$1 redirect;

location ~ ^(\/2017-02-17-15-53)?\/(web-apps|sdkjs)(\/.*)$ {
  expires 365d;
  alias /var/www/onlyoffice/documentserver/$2$3;
}

location ~ ^(\/2017-02-17-15-53)?(\/fonts\/.*) {
  proxy_cache_min_uses 1;
  proxy_cache_key $scheme$proxy_host$uri$is_args$args;
  proxy_cache fonts_cache;
  proxy_cache_use_stale updating error timeout invalid_header http_500;
  proxy_cache_valid 1d;
  proxy_cache_methods GET HEAD;

  proxy_pass http://docservice$2;
}

location ~ ^(\/cache\/files.*)(\/.*) {
  alias /var/lib/onlyoffice/documentserver/App_Data$1;
  add_header Content-Disposition $arg_disposition;

  # set $secret_string onlyoffice;
  # secure_link $arg_md5,$arg_expires;
  # secure_link_md5 "$secure_link_expires$uri$secret_string";

  # if ($secure_link = "") {
  #   return 403;
  # }

  # if ($secure_link = "0") {
  #     return 410;
  # }
}

location / {
  proxy_pass http://docservice;
}

location ~ ^(\/2017-02-17-15-53)?(\/doc\/.*) {
  proxy_pass http://docservice$2;
  proxy_http_version 1.1;
}

location /2017-02-17-15-53/ {
  proxy_pass http://docservice/;
}
